{"version":3,"sources":["context.js","components/navbar.js","components/loading.js","components/country.js","components/error.js","components/inputs.js","components/listofcountries.js","components/countrypage.js","components/main.js","App.js","index.js"],"names":["MyContext","React","createContext","Navbar","useContext","setMostrarInputs","darkModeOn","setDarkModeOn","className","to","onClick","id","style","fill","LoadingComponent","Country","pais","flag","name","population","region","capital","alpha2Code","src","alt","Erro","Regioes","regions","setCountries","countriesBackup","onChange","e","continente","value","filter","obj","placeholder","options","components","SelectContainer","children","props","Tooltip","delay","ValueContainer","IndicatorsContainer","Placeholder","SingleValue","MenuList","Option","truncateText","styles","container","base","border","valueContainer","backgroundColor","width","height","paddingLeft","borderTopLeftRadius","borderBottomLeftRadius","color","indicatorsContainer","borderTopRightRadius","borderBottomRightRadius","singleValue","menuList","borderRadius","option","provided","state","control","borderColor","PesquisaPais","useState","country","setCountry","useEffect","startsWith","type","htmlFor","input","target","ListOfCountries","countries","length","map","BigCountry","code","useParams","thisCountry","setThisCountry","objPais","nativeName","subregion","topLevelDomain","currencies","languages","borders","fullBordersNames","fronteirasCompletas","i","j","alpha3Code","push","settingFullBorders","index","arr","Main","loading","exact","path","App","window","localStorage","getItem","setItem","mostrarInputs","setCountriesBackup","setLoading","JSON","parse","setRegions","filterRegions","newRegions","objarr","Set","regiao","a","fetch","response","json","data","stringify","fetchCountries","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a8e49bd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst MyContext = React.createContext()\r\n\r\nexport default MyContext;","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MyContext from '../context'\r\nimport '../styles/navbar.css'\r\nimport { FiMoon } from 'react-icons/fi'\r\n\r\nfunction Navbar(){\r\n\r\n  const {setMostrarInputs, darkModeOn, setDarkModeOn} = useContext(MyContext)\r\n\r\n  function darkMode(){\r\n    setDarkModeOn(!darkModeOn)\r\n\r\n    /* setDarkModeOn(!darkModeOn)\r\n    localStorage.setItem(\"darkModeActive\", darkModeOn) */\r\n  }\r\n\r\n  return(\r\n    <nav className={darkModeOn === true ? 'nav dark-nav' : 'nav'}>\r\n\r\n      <Link className={darkModeOn === true ? 'titulo dark-titulo' : 'titulo'} to='/' onClick={() => setMostrarInputs(true)}>Where in the world?</Link>\r\n\r\n      <div className={darkModeOn === true ? 'darkmode dark-titulo' : 'darkmode'} onClick={() => darkMode()}>\r\n        <FiMoon id='lua' style={{ fill : `${darkModeOn === true ? 'white' : null}` }} />\r\n        <p>Dark Mode</p>\r\n      </div>\r\n\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport * as SVGLoaders from 'svg-loaders-react'\r\n\r\nimport '../styles/loading.css'\r\n\r\n/* https://github.com/ajwann/svg-loaders-react */\r\n\r\nconst LoadingComponent = () => {\r\n  return(\r\n    <div className=\"loading\">\r\n      <SVGLoaders.Bars />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingComponent","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MyContext from '../context'\r\n\r\nimport '../styles/country.css'\r\nimport '../styles/form.css'\r\n\r\nfunction Country({ pais }){\r\n\r\n  const { flag, name, population, region, capital, alpha2Code } = pais\r\n\r\n  const {setMostrarInputs, darkModeOn} = useContext(MyContext)\r\n\r\n\r\n  return(\r\n    \r\n    <>\r\n\r\n        <Link className={darkModeOn === true ? 'card dark-card' : 'card'} to={`/${alpha2Code}`} onClick={() => setMostrarInputs(false)}>\r\n        \r\n            <img src={flag} alt={name}/>\r\n\r\n            <section className={darkModeOn === true ? 'infos dark-infos' : 'infos'}>\r\n\r\n                <h4> {name} </h4>\r\n\r\n                <p>\r\n                    <span className=\"topico\">Population:</span> {population}\r\n                </p>\r\n\r\n                <p>\r\n                    <span className=\"topico\">Region:</span> {region}\r\n                </p>\r\n\r\n                <p>\r\n                    <span className=\"topico\">Capital:</span> {capital}\r\n                </p>\r\n\r\n            </section>\r\n        \r\n        </Link>\r\n\r\n    </>\r\n      \r\n  )\r\n}\r\n\r\nexport default Country;","import React, { useContext } from 'react'\r\nimport MyContext from '../context';\r\n\r\nimport '../styles/erro.css'\r\n\r\nfunction Erro(){\r\n    const { darkModeOn } = useContext(MyContext)\r\n    return(\r\n        <>\r\n            <h1 className={darkModeOn === true ? 'erroh1 dark-title' : 'erroh1'}> País não encontrado </h1>\r\n\r\n            <h3 className={darkModeOn === true ? 'erroh3 dark-title' : 'erroh3'}> \r\n                Verifique se:\r\n                <span className={darkModeOn === true ? 'tipo-erro dark-title' : 'tipo-erro'}>- A primeira letra é maiúscula</span>\r\n                <span className={darkModeOn === true ? 'tipo-erro dark-title' : 'tipo-erro'}>- O nome do país está correto (precisa ser em inglês)</span>\r\n                <span className={darkModeOn === true ? 'tipo-erro dark-title' : 'tipo-erro'}></span>\r\n            </h3>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Erro;","import React, { useState, useContext, useEffect } from 'react'\r\nimport MyContext from '../context'\r\n\r\nimport Select, { components } from 'react-select';\r\nimport Tooltip from '@atlaskit/tooltip';\r\n\r\nimport '../styles/form.css'\r\n\r\nconst Regioes = ({ regions }) => {\r\n    const {\r\n        setCountries,\r\n        countriesBackup,\r\n        darkModeOn} = useContext(MyContext)\r\n\r\n    //FILTRO PARA AS REGIÕES DO DROPDOWN MENU\r\n    function filtrarRegiao(continente){\r\n        setCountries(countriesBackup.filter((obj) => obj.region === continente))\r\n    }\r\n\r\n    //INDICATORSCONTAINER -> BOTÕES QUE FICAM À DIREITA DO INPUT\r\n    //INDICATORSEPARATOR -> BARRINHA QUE FICA NO MEIO DOS BOTÕES\r\n    //MENU -> É O COMPONENTE QUE ENGLOBA OS ITENS DAS OPÇÕES\r\n    //OPTION -> COMPONENTE QUE RECEBE CADA OPÇÃO DO MENU\r\n    //PLACEHOLDER -> PLACEHOLDER DO INPUT\r\n    //SELECTCONTAINER -> CONTAINER QUE ENGLOBA O COMPONENTE INTEIRO\r\n    //VALUECONTAINER -> CONTAINER QUE ENGLOBA A OPÇÃO ESCOLHIDA\r\n\r\n    //A LETRA NO INPUT AINDA FICA PRETA QUANDO O DARKMODE ESTÁ ATIVO (FEITO)\r\n    //PRECISO ESTILIZAR A SETINHA DO DROPDOWN MENU\r\n    //A BORDA AINDA ESTÁ COM A COR PADRÃO (FEITO)\r\n    \r\n    const SelectContainer = ({ children, ...props }) => {\r\n      return (\r\n        <Tooltip delay={0}>\r\n          <components.SelectContainer {...props}>\r\n            {children}\r\n          </components.SelectContainer>\r\n        </Tooltip>\r\n      )\r\n    }\r\n    const ValueContainer = ({ children, ...props }) => (\r\n      <components.ValueContainer {...props}>{children}</components.ValueContainer>\r\n    )\r\n    const IndicatorsContainer = props => {\r\n      return (\r\n        <div>\r\n          <components.IndicatorsContainer {...props} />\r\n        </div>\r\n      )\r\n    }\r\n    const Placeholder = props => {\r\n      return <components.Placeholder {...props} />;\r\n    }\r\n    const SingleValue = ({ children, ...props }) => (\r\n      <components.SingleValue {...props}>{children}</components.SingleValue>\r\n    )    \r\n    const MenuList = props => {\r\n      return (\r\n        <components.MenuList {...props}>\r\n          {props.children}\r\n        </components.MenuList>\r\n      )\r\n    }\r\n    const Option = props => {\r\n      return (\r\n        <Tooltip truncateText>\r\n          <components.Option className={darkModeOn === true ? 'dark-option' : 'option'} {...props} />\r\n        </Tooltip>\r\n      )\r\n    }\r\n\r\n    return(\r\n        <>\r\n          <Select \r\n            onChange={(e) => filtrarRegiao(e.value)} \r\n            placeholder={\"Filter by region\"}\r\n            options={regions} \r\n            className={`${darkModeOn === true ? 'lista dark-lista' : 'lista'}`}                        \r\n            components={{ SelectContainer, ValueContainer, IndicatorsContainer, Placeholder, SingleValue, MenuList, Option }}\r\n            styles={{\r\n              container: base => ({\r\n                ...base,\r\n                border: `${darkModeOn === true ? '0px' : '1px solid hsl(0%, 0%, 80%)'}`\r\n              }),\r\n              valueContainer: base => ({\r\n                ...base,\r\n                backgroundColor: `${darkModeOn === true ? 'hsl(209, 23%, 22%)' : 'initial'}`,\r\n                width: 'calc(100% - 47px)',\r\n                height: 38.5,\r\n                paddingLeft: '10px',\r\n                borderTopLeftRadius: 2.5,\r\n                borderBottomLeftRadius: 2.5\r\n              }),\r\n              placeholder: base => ({\r\n                ...base,\r\n                color: `${darkModeOn === true ? 'whitesmoke' : 'hsl(0,0%,80%)'}`\r\n              }),\r\n              indicatorsContainer: base => ({\r\n                ...base,\r\n                backgroundColor : `${darkModeOn === true ? 'hsl(209, 23%, 22%)' : 'initial'}`, \r\n                height: 38.5,\r\n                borderTopRightRadius: 2.5,\r\n                borderBottomRightRadius: 2.5\r\n              }),\r\n              singleValue: base => ({\r\n                ...base,\r\n                color: `${darkModeOn === true ? 'whitesmoke' : 'initial'}`\r\n              }),              \r\n              menuList: base => ({\r\n                ...base,\r\n                backgroundColor: `${darkModeOn === true ? 'hsl(209, 23%, 22%)' : 'initial'}`,\r\n                borderRadius: 3\r\n              }),\r\n              option: (provided, state) => {\r\n                return { \r\n                  ...provided, \r\n                  color: `${darkModeOn === true ? 'whitesmoke' : 'hsl(0%, 0%, 80%)'}`\r\n                }\r\n              },\r\n              control: (provided, state) => {\r\n                return { \r\n                  ...provided, \r\n                  borderColor: `${darkModeOn === true ? 'hsl(209, 23%, 22%)' : 'lightgrey'}`,\r\n                }\r\n              }\r\n            }}\r\n          />            \r\n                            \r\n        </>\r\n    )\r\n}\r\n\r\nconst PesquisaPais = () => {\r\n\r\n  const [country, setCountry] = useState('')\r\n\r\n  const {\r\n    setCountries,\r\n    countriesBackup,\r\n    darkModeOn} = useContext(MyContext)\r\n\r\n    useEffect(() => {\r\n      function filtrarPais(pais){\r\n          setCountries(() => {\r\n              //A IDEIA É FAZER COM QUE A PRIMEIRA LETRA SEJA SEMPRE MAIUSCULA SEM QUE O USUARIO TENHA QUE COLOCÁ-LA MAIUSCULA\r\n              return countriesBackup.filter((obj) => obj.name.startsWith(pais))\r\n          })\r\n      }\r\n\r\n      filtrarPais(country)\r\n  }, [country, countriesBackup, setCountries])\r\n\r\n  //DEVE VALIDAR O INPUT PARA VERIFICAR SE A PRIMEIRA LETRA É MAIÚSCULA\r\n  function validaInput(input){\r\n    setCountry(input)\r\n  }\r\n\r\n  return (\r\n    <input \r\n      type=\"text\" \r\n      name=\"country name\"\r\n      htmlFor=\"\"\r\n      placeholder='Search for a country...' \r\n      className={darkModeOn === true ? 'search dark-search' : 'search'}\r\n      value={country}\r\n      onChange={(e) => validaInput(e.target.value)}            \r\n    />\r\n  )\r\n}\r\n\r\nexport { Regioes, PesquisaPais }","import React, { useContext } from 'react'\r\nimport MyContext from '../context'\r\nimport Country from './country'\r\nimport Erro from './error'\r\n\r\nimport '../styles/country.css'\r\nimport '../styles/form.css'\r\n\r\nimport { Regioes, PesquisaPais } from './inputs'\r\n\r\nfunction ListOfCountries(){\r\n    const {countries, regions} = useContext(MyContext)\r\n    return(\r\n        <>\r\n        <div className=\"form\">\r\n\r\n            <PesquisaPais />\r\n\r\n            <Regioes regions={regions} />\r\n\r\n        </div>\r\n\r\n            {\r\n                countries.length === 0 ? <Erro /> : countries.map((pais) => {\r\n                    return <Country pais={pais} key={pais.alpha2Code} />\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfCountries;","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport MyContext from '../context'\r\nimport { BsArrowLeft } from 'react-icons/bs'\r\n\r\nimport '../styles/countrypage.css'\r\nimport '../styles/form.css'\r\n\r\nfunction BigCountry(){\r\n\r\n    const { code } = useParams()\r\n\r\n    const [thisCountry, setThisCountry] = useState([])\r\n    \r\n    const {countries, darkModeOn, setMostrarInputs} = useContext(MyContext)\r\n\r\n    useEffect(() => {\r\n        setThisCountry(countries.filter((objPais) => objPais.alpha2Code === code))\r\n    }, [code, countries])\r\n        \r\n    const settingFullBorders = (countries, borders) => {\r\n        let fronteirasCompletas = []\r\n\r\n        //iterando pelo array de borders\r\n        for(let i = 0; i < borders.length; i++){\r\n            //iterando pelo array de countries\r\n            for(let j = 0; j < countries.length; j++){\r\n                if(borders[i] === countries[j].alpha3Code){\r\n                    fronteirasCompletas.push(countries[j].name)\r\n                }\r\n            }\r\n        }\r\n        return fronteirasCompletas\r\n    }\r\n\r\n    return(\r\n      <>\r\n        {\r\n          thisCountry.length > 0 && thisCountry.map((obj) => {\r\n                \r\n            const { \r\n                flag, \r\n                name, \r\n                nativeName, \r\n                population, \r\n                region, \r\n                capital, \r\n                subregion, \r\n                topLevelDomain, \r\n                currencies, \r\n                languages, \r\n                alpha2Code, \r\n                borders } = obj\r\n\r\n                const fullBordersNames = settingFullBorders(countries, borders)\r\n                \r\n                return (\r\n\r\n                  <>\r\n\r\n                    <div className=\"form\">\r\n                        <Link className={darkModeOn === true ? 'back dark-back' : 'back'} to='/' onClick={() => setMostrarInputs(true)}> <BsArrowLeft /> Back </Link>\r\n                    </div>\r\n\r\n                    <section className=\"bigcountry\" key={alpha2Code}>\r\n\r\n                      <img src={flag} alt={name} />\r\n\r\n                       <div className={darkModeOn === true ? 'countryinfos dark-textinfos' : 'countryinfos'}>\r\n\r\n                           <h2> {name} </h2>\r\n\r\n                            {/* ESSA DIV ENGLOBA AS DUAS COLUNAS DE DADOS */}\r\n                            <div className={darkModeOn === true ? 'textinfos dark-textinfos' : 'textinfos'}>\r\n\r\n                                {/* ENGLOBA A PRIMEIRA COLUNA */}\r\n                                <div className=\"firstinfos\">\r\n                                    <p>\r\n                                        <span className=\"topico\">Native Name: </span> {nativeName}\r\n                                    </p>\r\n                                    <p>\r\n                                        <span className=\"topico\">Population: </span> {population}\r\n                                    </p>\r\n                                    <p>\r\n                                        <span className=\"topico\"> Region: </span> {region}\r\n                                    </p>\r\n                                    <p>\r\n                                        <span className=\"topico\">Sub Region: </span> {subregion}\r\n                                    </p>\r\n                                    <p>\r\n                                        <span className=\"topico\">Capital: </span> {capital}\r\n                                    </p>\r\n                                </div>\r\n\r\n                                {/* ENGLOBA A SEGUNDA COLUNA */}\r\n                                <div className=\"otherinfos\">\r\n                                    <p>\r\n                                        <span className=\"topico\">Top Level Domain: </span> {topLevelDomain[0]}\r\n                                    </p>\r\n                                    <p>\r\n                                        <span className=\"topico\">Currencies: </span> {currencies.map((obj, index) => {\r\n                                            if(index !== currencies.length - 1){\r\n                                                return `${obj.name}, `\r\n                                            }\r\n                                            return  `${obj.name}.`\r\n                                        })}\r\n                                    </p>\r\n                                    <p>\r\n                                        <span className=\"topico\">Languages: </span> {languages.map((obj, index) => {\r\n                                            if(index !== languages.length - 1){\r\n                                                return `${obj.name}, ` \r\n                                            }\r\n                                            return `${obj.name}.`\r\n                                        })}\r\n                                    </p>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"bordercountries\">\r\n                                <span className=\"topicoborder\">\r\n                                    Border Countries: {fullBordersNames.length === 0 ? <b>Sem Informações</b> : \r\n                                    fullBordersNames.map((arr, index) => {\t\t\t\t\t\t\t\t\t\t\t\r\n                                      return <span className={darkModeOn === true ? 'border dark-border' : 'border'} key={index}> {arr} </span>\r\n                                    })\r\n                                  }\r\n                                </span>\r\n                                \r\n                            </div>\r\n                                \r\n                        </div>\r\n\r\n                    </section>\r\n                  </>\r\n                )\r\n            })\r\n          }\r\n      </>\r\n            \r\n    )\r\n}\r\n\r\nexport default BigCountry;","import React, { useContext } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport MyContext from '../context'\r\nimport LoadingComponent from './loading'\r\nimport ListOfCountries from './listofcountries'\r\nimport BigCountry from './countrypage'\r\n\r\nimport '../styles/global.css'\r\nimport '../styles/paises.css'\r\n\r\nfunction Main(){\r\n\r\n    const {        \r\n        loading,\r\n        darkModeOn ,\r\n        countries\r\n    } = useContext(MyContext)\r\n    \r\n    return(\r\n        <main className={darkModeOn === true ? 'main dark-main' : 'main'} style={{ height: `${countries.length === 0 ? 'calc(100vh - 60px)' : 'fit-content'}` }} >\r\n\r\n            {\r\n                loading ? <LoadingComponent /> : <section className=\"paises\">\r\n                    {\r\n                        <>\r\n                            <Route exact path=\"/\" children={<ListOfCountries />} />                                    \r\n                                \r\n                            <Route path='/:code' children={<BigCountry />} />\r\n                        </>\r\n                    }\r\n                </section>\r\n            }\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport MyContext from './context'\nimport Navbar from './components/navbar'\nimport Main from './components/main'\n\nimport './styles/global.css'\n\nconst url = 'https://restcountries.eu/rest/v2/'\n\nfunction App() {\n  /* FARÁ A CONDICIONAL NA RENDERIZAÇÃO DOS COMPONENTES NO MODO DARK */\n  const [darkModeOn, setDarkModeOn] = useState(window.localStorage.getItem(\"darkModeActive\") === \"true\" ? true : false)\n\n  useEffect(() => {\n    window.localStorage.setItem(\"darkModeActive\", darkModeOn)\n  }, [darkModeOn])\n\n  /* CONDICIONAL PARA RENDERIZAR O FORM E A LISTA */\n  const [mostrarInputs, setMostrarInputs] = useState(true)\n\n  /* STATE QUE ARMAZENA O ARRAY COM TODOS OS PAÍSES */\n  const [countries, setCountries] = useState([])\n\n  /* ARRAY QUE CONTÉM O REQUEST INICIAL DOS PAÍSES (USADO PARA AUXILIAR NO FILTRO DE PAÍSES) */\n  const [countriesBackup, setCountriesBackup] = useState([])\n\n  /* AUXILIO NA RENDERIZAÇÃO (NÃO SEI SE ESTÁ IMPLEMENTADO OU SE FUNCIONA) */\n  const [loading, setLoading] = useState(true)\n\n  /* ARRAY QUE ARMAZENA SOMENTE AS REGIÕES PARA O FILTRO */\n  const [regions, setRegions] = useState(!window.localStorage.getItem(\"CountriesArray\") ? [] : JSON.parse(localStorage.getItem(\"CountriesArray\")))\n  //const [regions, setRegions] = useState([])\n\n  /* FILTER FUNCTION FOR THE FILTER OF COUNTRIES */\n  const filterRegions = (arr) => {\n      let newRegions = arr.map((obj) => obj.region)\n      newRegions = [...new Set(newRegions)]\n      newRegions = newRegions.filter((regiao) => regiao !== \"\")\n      let objarr = newRegions.map((regiao) => {\n        return { \"value\" : regiao, \"label\" : regiao }\n      })\n      setRegions(objarr)\n  }\n\n  /* REALIZA O REQUEST */\n  useEffect(() => {\n    if(!window.localStorage.getItem(\"CountriesArray\")){\n      /* FETCH FUNCTION */\n      const fetchCountries = async () => {\n        const response = await fetch(url)\n        const data = await response.json()\n        setCountries(() => {\n            filterRegions(data)\n            setCountriesBackup(data)\n            return data\n        })\n        setLoading(false)\n        window.localStorage.setItem(\"CountriesArray\", JSON.stringify(data))\n      }\n      fetchCountries()\n    }\n    filterRegions(!JSON.parse(localStorage.getItem(\"CountriesArray\")) ? [] : JSON.parse(localStorage.getItem(\"CountriesArray\")))\n    setCountriesBackup(!JSON.parse(localStorage.getItem(\"CountriesArray\")) ? [] : JSON.parse(localStorage.getItem(\"CountriesArray\")))\n    setLoading(false)\n  }, [])\n\n  return (\n    <MyContext.Provider\n      value={{\n        mostrarInputs,\n        setMostrarInputs,\n        countries,\n        setCountries,\n        loading,\n        regions,\n        countriesBackup,\n        setCountriesBackup,\n        darkModeOn,\n        setDarkModeOn\n      }}\n    >\n\n      <Router>\n\n        <Navbar />\n\n        <Main />\n\n      </Router>\n    </MyContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.register();"],"sourceRoot":""}