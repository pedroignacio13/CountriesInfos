{"version":3,"sources":["context.js","components/navbar.js","components/form.js","components/country.js","components/listofcountries.js","components/countrypage.js","components/main.js","App.js","index.js"],"names":["MyContext","React","createContext","Navbar","useContext","setMostrarInputs","darkModeOn","setDarkModeOn","className","to","onClick","style","fill","Inputs","regions","useState","country","setCountry","setCountries","countriesBackup","useEffect","pais","filter","obj","name","startsWith","type","placeholder","value","onChange","e","input","target","continente","region","options","Form","mostrarInputs","Country","flag","population","capital","alpha2Code","src","alt","ListOfCountries","countries","map","BigCountry","code","useParams","thisCountry","setThisCountry","objPais","length","nativeName","subregion","topLevelDomain","currencies","languages","borders","fullBordersNames","fronteirasCompletas","i","j","alpha3Code","push","settingFullBorders","index","arr","Main","loading","exact","path","children","App","setCountriesBackup","setLoading","setRegions","filterRegions","newRegions","objarr","Set","regiao","a","fetch","response","json","data","fetchCountries","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.befcaa03.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst MyContext = React.createContext()\r\n\r\nexport default MyContext;","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MyContext from '../context'\r\nimport '../styles/navbar.css'\r\nimport { FiMoon } from 'react-icons/fi'\r\n\r\nfunction Navbar(){\r\n\r\n  const {setMostrarInputs, darkModeOn, setDarkModeOn} = useContext(MyContext)\r\n\r\n  function darkMode(){\r\n    setDarkModeOn(!darkModeOn)\r\n  }\r\n\r\n  return(\r\n    <nav className={darkModeOn ? 'nav dark-nav' : 'nav'}>\r\n\r\n      <Link className={darkModeOn ? 'titulo dark-titulo' : 'titulo'} to='/' onClick={() => setMostrarInputs(true)}>Where in the world?</Link>\r\n\r\n      <div className={darkModeOn ? 'darkmode dark-titulo' : 'darkmode'} onClick={() => darkMode()}>\r\n        <FiMoon style={{ fill : `${darkModeOn ? 'white' : null}` }} />\r\n        <p>Dark Mode</p>\r\n      </div>\r\n\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React, { useState, useContext, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MyContext from '../context'\r\n/* import { GrSearch } from 'react-icons/gr' */\r\nimport { BsArrowLeft } from 'react-icons/bs'\r\n/* import { RiArrowDropDownLine } from 'react-icons/ri' */\r\n\r\nimport Select from 'react-select';\r\n\r\nimport '../styles/form.css'\r\n\r\nfunction Form(){\r\n\r\n    const {\r\n        mostrarInputs, \r\n        setMostrarInputs, \r\n        regions,\r\n        darkModeOn} = useContext(MyContext)\r\n\r\n    return(\r\n        //não está funcionando o filtro dos países\r\n        <div className=\"form\">\r\n\r\n            {\r\n                !mostrarInputs ? \r\n                <Link className={darkModeOn ? 'back dark-back' : 'back'} to='/' onClick={() => setMostrarInputs(true)}> <BsArrowLeft /> Back </Link>\r\n                : \r\n                <Inputs regions={regions} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Inputs = ({ regions }) => {\r\n\r\n    const [country, setCountry] = useState('')\r\n\r\n    const {\r\n        setCountries,\r\n        countriesBackup,\r\n        darkModeOn} = useContext(MyContext)\r\n\r\n    //NÃO CONSEGUI IMPLEMENTAR NO CLICK DO OPTION\r\n    function filtrarRegiao(continente){\r\n        setCountries(countriesBackup.filter((obj) => obj.region === continente))\r\n    }\r\n\r\n    //DEVE VALIDAR O INPUT PARA VERIFICAR SE A PRIMEIRA LETRA É MAIÚSCULA\r\n    function validaInput(input){\r\n        setCountry(input)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        //FUNFA CERTIN\r\n        function filtrarPais(pais){\r\n            setCountries(() => {\r\n                //A IDEIA É FAZER COM QUE A PRIMEIRA LETRA SEJA SEMPRE MAIUSCULA SEM QUE O USUARIO TENHA QUE COLOCÁ-LA MAIUSCULA\r\n                return countriesBackup.filter((obj) => obj.name.startsWith(pais))\r\n            })\r\n        }\r\n\r\n        filtrarPais(country)\r\n    }, [country, countriesBackup, setCountries])\r\n\r\n    return(\r\n        <>\r\n            <input \r\n             type=\"text\" \r\n             placeholder='Search for a country...' \r\n             className={darkModeOn ? 'search dark-search' : 'search'}\r\n             value={country}\r\n             onChange={(e) => validaInput(e.target.value)}            \r\n            />\r\n\r\n            <Select \r\n             onChange={(e) => filtrarRegiao(e.value)} \r\n             placeholder=\"Filter by region\"\r\n             className={darkModeOn ? 'dark-lista' : 'lista'} \r\n             options={regions} \r\n            />\r\n                            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form;","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MyContext from '../context'\r\n\r\nimport '../styles/country.css'\r\n\r\nfunction Country({ pais }){\r\n\r\n  const { flag, name, population, region, capital, alpha2Code } = pais\r\n\r\n  const {setMostrarInputs, darkModeOn} = useContext(MyContext)\r\n\r\n  return(\r\n      \r\n    <Link className={darkModeOn ? 'card dark-card' : 'card'} to={`/${alpha2Code}`} onClick={() => setMostrarInputs(false)}>\r\n    \r\n        <img src={flag} alt={name}/>\r\n\r\n        <section className={darkModeOn ? 'infos dark-infos' : 'infos'}>\r\n\r\n            <h4> {name} </h4>\r\n\r\n            <p>\r\n                <span className=\"topico\">Population:</span> {population}\r\n            </p>\r\n\r\n            <p>\r\n                <span className=\"topico\">Region:</span> {region}\r\n            </p>\r\n\r\n            <p>\r\n                <span className=\"topico\">Capital:</span> {capital}\r\n            </p>\r\n\r\n        </section>\r\n    \r\n    </Link>\r\n      \r\n  )\r\n}\r\n\r\nexport default Country;","import React, { useContext } from 'react'\r\nimport MyContext from '../context'\r\nimport Country from './country'\r\n\r\nimport '../styles/country.css'\r\n\r\nfunction ListOfCountries(){\r\n    const {countries} = useContext(MyContext)\r\n    //console.log(countries)\r\n    return(\r\n        countries.map((pais) => {\r\n            return <Country pais={pais} key={pais.alpha2Code} />\r\n        }) \r\n    )\r\n}\r\n\r\nexport default ListOfCountries;","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport MyContext from '../context'\r\n\r\nimport '../styles/countrypage.css'\r\n\r\nfunction BigCountry(){\r\n\r\n    const { code } = useParams()\r\n\r\n\tconst [thisCountry, setThisCountry] = useState([])\r\n\t\r\n\tconst {countries, darkModeOn} = useContext(MyContext)\r\n\r\n    useEffect(() => {\r\n\t\tsetThisCountry(countries.filter((objPais) => objPais.alpha2Code === code))\r\n\t}, [code, countries])\r\n\t\t\r\n\tconst settingFullBorders = (countries, borders) => {\r\n\t\tlet fronteirasCompletas = []\r\n\r\n\t\t//iterando pelo array de borders\r\n\t\tfor(let i = 0; i < borders.length; i++){\r\n\r\n\t\t\t//iterando pelo array de countries\r\n\t\t\tfor(let j = 0; j < countries.length; j++){\r\n\r\n\t\t\t\tif(borders[i] === countries[j].alpha3Code){\r\n\r\n\t\t\t\t\tfronteirasCompletas.push(countries[j].name)\r\n\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t}\r\n\r\n\t\treturn fronteirasCompletas\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tthisCountry.length > 0 && thisCountry.map((obj) => {\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst { \r\n\t\t\t\t\t\tflag, \r\n\t\t\t\t\t\tname, \r\n\t\t\t\t\t\tnativeName, \r\n\t\t\t\t\t\tpopulation, \r\n\t\t\t\t\t\tregion, \r\n\t\t\t\t\t\tcapital, \r\n\t\t\t\t\t\tsubregion, \r\n\t\t\t\t\t\ttopLevelDomain, \r\n\t\t\t\t\t\tcurrencies, \r\n\t\t\t\t\t\tlanguages, \r\n\t\t\t\t\t\talpha2Code, \r\n\t\t\t\t\t\tborders } = obj\r\n\r\n\t\t\t\t\t\tconst fullBordersNames = settingFullBorders(countries, borders)\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<section className=\"bigcountry\" key={alpha2Code}>\r\n\r\n\t\t\t\t\t\t\t<img src={flag} alt={name} />\r\n\r\n\t\t\t\t\t\t\t<div className={darkModeOn ? 'countryinfos dark-textinfos' : 'countryinfos'}>\r\n\r\n\t\t\t\t\t\t\t\t<h2> {name} </h2>\r\n\r\n                {/* ESSA DIV ENGLOBA AS DUAS COLUNAS DE DADOS */}\r\n\t\t\t\t\t\t\t\t<div className={darkModeOn ? 'textinfos dark-textinfos' : 'textinfos'}>\r\n\r\n                  {/* ENGLOBA A PRIMEIRA COLUNA */}\r\n\t\t\t\t\t\t\t\t\t<div className=\"firstinfos\">\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"topico\">Native Name: </span> {nativeName}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"topico\">Population: </span> {population}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"topico\"> Region: </span> {region}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"topico\">Sub Region: </span> {subregion}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"topico\">Capital: </span> {capital}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                  {/* ENGLOBA A SEGUNDA COLUNA */}\r\n\t\t\t\t\t\t\t\t\t<div className=\"otherinfos\">\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"topico\">Top Level Domain: </span> {topLevelDomain[0]}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"topico\">Currencies: </span> {currencies.map((obj, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(index !== currencies.length - 1){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn `${obj.name}, `\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn  `${obj.name}.`\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"topico\">Languages: </span> {languages.map((obj, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(index !== languages.length - 1){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn `${obj.name}, ` \r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn `${obj.name}.`\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"bordercountries\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"topicoborder\">Border Countries: </span>\r\n\t\t\t\t\t\t\t\t\t<div className=\"bordernames\">\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tfullBordersNames.map((arr, index) => {\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <span className={darkModeOn ? 'border dark-border' : 'border'} key={index}> {arr} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</>\r\n\t\t\t\r\n\t)\r\n}\r\n\r\nexport default BigCountry;","import React, { useContext } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport MyContext from '../context'\r\nimport Form from './form'\r\nimport ListOfCountries from './listofcountries'\r\nimport BigCountry from './countrypage'\r\n\r\nimport '../styles/global.css'\r\nimport '../styles/paises.css'\r\n\r\nfunction Main(){\r\n\r\n    const {        \r\n        loading,\r\n        darkModeOn \r\n    } = useContext(MyContext)\r\n    \r\n    return(\r\n        <main className={darkModeOn ? 'main dark-main' : 'main'}>\r\n\r\n            <Form />\r\n            {\r\n                !loading && <section className=\"paises\">\r\n                    {\r\n                        <>\r\n                            <Route exact path=\"/\" children={<ListOfCountries />} />                                    \r\n                                \r\n                            <Route path='/:code' children={<BigCountry />} />\r\n                        </>\r\n                    }\r\n                </section>\r\n            }\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport MyContext from './context'\nimport Navbar from './components/navbar'\nimport Main from './components/main'\n\nimport './styles/global.css'\n\nconst url = 'https://restcountries.eu/rest/v2/'\n\nfunction App() {\n  /* FARÁ A CONDICIONAL NA RENDERIZAÇÃO DOS COMPONENTES NO MODO DARK */\n  const [darkModeOn, setDarkModeOn] = useState(false)\n\n  /* CONDICIONAL PARA RENDERIZAR O FORM E A LISTA */\n  const [mostrarInputs, setMostrarInputs] = useState(true)\n\n  /* STATE QUE ARMAZENA O ARRAY COM TODOS OS PAÍSES */\n  const [countries, setCountries] = useState([])\n\n  /* ARRAY QUE CONTÉM O REQUEST INICIAL DOS PAÍSES (USADO PARA AUXILIAR NO FILTRO DE PAÍSES) */\n  const [countriesBackup, setCountriesBackup] = useState([])\n\n  /* const [paisFiltrado, setPaisFiltrado] = useState([]) */\n\n  /* AUXILIO NA RENDERIZAÇÃO (NÃO SEI SE ESTÁ IMPLEMENTADO OU SE FUNCIONA) */\n  const [loading, setLoading] = useState(true)\n\n  /* ARRAY QUE ARMAZENA SOMENTE AS REGIÕES PARA O FILTRO */\n  const [regions, setRegions] = useState([])\n\n  \n\n  /* FILTER FUNCTION FOR THE FILTER OF COUNTRIES */\n  const filterRegions = (arr) => {\n\n      let newRegions = arr.map((obj) => obj.region)\n      newRegions = [...new Set(newRegions)]\n      newRegions = newRegions.filter((regiao) => regiao !== \"\")\n      let objarr = newRegions.map((regiao) => {\n        return { \"value\" : regiao, \"label\" : regiao }\n      })\n      setRegions(objarr)\n      \n  }\n\n  /* REALIZA O REQUEST */\n  useEffect(() => {\n    /* FETCH FUNCTION */\n    const fetchCountries = async () => {\n    const response = await fetch(url)\n    const data = await response.json()\n    setCountries(() => {\n        filterRegions(data)\n        setCountriesBackup(data)\n        return data\n    })\n    setLoading(false)\n    }\n\n    fetchCountries()\n  }, [])\n\n  return (\n    <MyContext.Provider\n      value={{\n        mostrarInputs,\n        setMostrarInputs,\n        countries,\n        setCountries,\n        loading,\n        regions,\n        countriesBackup,\n        setCountriesBackup,\n        /* paisFiltrado,\n        setPaisFiltrado */\n        darkModeOn,\n        setDarkModeOn\n      }}\n    >\n\n      <Router>\n\n        <Navbar />\n\n        <Main />\n\n      </Router>\n    </MyContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}